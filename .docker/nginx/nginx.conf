events {
}

http {
	server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
		
    server_name docker-ssl.dev;
		
    ssl_certificate /ssl/cert.pem;
		ssl_certificate_key /ssl/key.pem;
		ssl_protocols TLSv1.2;

		access_log /log/docker-ssl.log;
		
    gzip on; 

    location / {
			proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_set_header  X-Forwarded-For $remote_addr;
      proxy_set_header  X-Forwarded-Host $remote_addr;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

			proxy_pass http://web:3000;
		}
	}

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
		
    server_name api.docker-ssl.dev;
		
    ssl_certificate /ssl/cert.pem;
		ssl_certificate_key /ssl/key.pem;
		ssl_protocols TLSv1.2;

		access_log /log/api.docker-ssl.log;

    gzip on; 
		
    location / {
			proxy_set_header  Host $host;
      proxy_set_header  X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto https;
      proxy_set_header  X-Forwarded-For $remote_addr;
      proxy_set_header  X-Forwarded-Host $remote_addr;

      # WebSocket support
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";

			proxy_pass http://api:4000;
		}
	}
}